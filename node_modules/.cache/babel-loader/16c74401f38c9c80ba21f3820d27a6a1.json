{"ast":null,"code":"var _jsxFileName = \"/Users/micahrus/Desktop/final_assignment/tidy-keep-client/src/components/Login.jsx\";\nimport React from \"react\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errMessage: \"\"\n    };\n\n    this.onInputChange = event => {\n      const key = event.target.id;\n      this.setState({\n        [key]: event.target.value\n      });\n    };\n\n    this.onFormSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const body = {\n        auth: {\n          email,\n          password\n        }\n      };\n\n      try {\n        const response = await fetch(\"http://localhost:3000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n\n        if (response.status >= 400) {\n          throw new Error(\"incorrect credentials\");\n        } else {\n          const {\n            jwt\n          } = await response.json();\n          localStorage.setItem(\"token\", jwt);\n          this.props.history.push(\"/secrets\");\n        }\n      } catch (err) {\n        this.setState({\n          errMessage: err.message\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      errMessage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Login\"), errMessage && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 24\n      }\n    }, errMessage), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/micahrus/Desktop/final_assignment/tidy-keep-client/src/components/Login.jsx"],"names":["React","Login","Component","state","email","password","errMessage","onInputChange","event","key","target","id","setState","value","onFormSubmit","preventDefault","body","auth","response","fetch","method","headers","JSON","stringify","status","Error","jwt","json","localStorage","setItem","props","history","push","err","message","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass Login extends React.Component {\n  state = { email: \"\", password: \"\", errMessage: \"\" };\n\n  onInputChange = (event) => {\n    const key = event.target.id;\n    this.setState({\n      [key]: event.target.value,\n    });\n  };\n\n  onFormSubmit = async (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    const body = {\n      auth: { email, password },\n    };\n    try {\n      const response = await fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n      if (response.status >= 400) {\n        throw new Error(\"incorrect credentials\");\n      } else {\n        const { jwt } = await response.json();\n        localStorage.setItem(\"token\", jwt);\n        this.props.history.push(\"/secrets\");\n      }\n    } catch (err) {\n      this.setState({\n        errMessage: err.message,\n      });\n    }\n  };\n\n  render() {\n    const { email, password, errMessage } = this.state;\n    return (\n      <div className=\"container\">\n        <h1>Login</h1>\n        {errMessage && <span>{errMessage}</span>}\n        <form onSubmit={this.onFormSubmit}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={this.onInputChange}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={this.onInputChange}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}